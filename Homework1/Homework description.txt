Домашнее задание 1
Разработка интерактивного меню для Телеграмм бота

Цель:
В этом задании мы закрепим знания, полученные в ходе занятий, и создадим базовое интерактивное меню для будущего бота, 
используя при этом основные принципы работы с переменными, методами и операторами управления. 
Результатом выполнения домашнего задания будет простое консольное приложение, имитирующее работу бота.


Описание/Пошаговая инструкция выполнения домашнего задания:
Вам предстоит создать консольное приложение, которое будет имитировать интерактивное меню бота согласно следующему плану:

Приветствие: При запуске программы отображается сообщение приветствия со списком доступных команд: /start, /help, /info, /exit.
Обработка команды /start: Если пользователь вводит команду /start, программа просит его ввести своё имя. 
Сохраните введенное имя в переменную. Программа должна обращаться к пользователю по имени в каждом следующем ответе.
Обработка команды /help: Отображает краткую справочную информацию о том, как пользоваться программой.
Обработка команды /info: Предоставляет информацию о версии программы и дате её создания.
Доступ к команде /echo: После ввода имени становится доступной команда /echo. 
При вводе этой команды с аргументом (например, /echo Hello), программа возвращает введенный текст (в данном примере "Hello").
Основной цикл программы: Программа продолжает ожидать ввод команды от пользователя, пока не будет введена команда /exit.
Примечание
Для получения информации из консоли пользователя воспользуйтесь функцией Console.ReadLide()

_________________________________________________________________________________________________________________________________________________________________

Домашнее задание 2
Расширение возможностей бота с помощью списка

Цель:
Вам предстоит расширить функционал консольного бота, который вы создали в домашнем задании №1, добавив возможности для работы со структурой данных List.
Бот будет управлять списком задач с помощью трех новых команд.


Описание/Пошаговая инструкция выполнения домашнего задания:
Создайте новую команду /addtask
Пользователь сможет добавлять задачи в список.
После ввода команды /addtask, бот должен попросить ввести описание задачи.
Сохраните задачу в список (или массив) и отобразите сообщение о том, что задача добавлена.


Создайте новую команду /showtasks
При вводе команды /showtasks бот должен отобразить список всех добавленных задач.
Если задачи ещё не добавлены, необходимо вывести сообщение о том, что список пуст.


Создайте новую команду /removetask
Бот должен позволить пользователю удалять задачи по номеру в списке.
После ввода команды /removetask, бот должен отобразить список задач с номерами.
Затем бот должен запросить у пользователя номер задачи для удаления и удалить выбранную задачу из списка.


Модифицируйте команду /help
Обновите команду /help, добавив к ней описание новых команд: /addtask, /showtasks и /removetask.


Реализуйте обработку ошибок
Если пользователь пытается удалить задачу, когда список пуст, программа должна уведомить его об этом.
Также, если введён неверный номер задачи при удалении, бот должен уведомить об этом и попросить ввести корректный номер.