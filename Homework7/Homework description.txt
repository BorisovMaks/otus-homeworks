Создание Telegram-бота

Цель:
Научиться работать с Telegram Bot API, реализовать обработку сообщений, использовать делегаты и события для управления процессом обработки,
асинхронно работать с внешними API


Описание/Пошаговая инструкция выполнения домашнего задания:
Вам предстоит написать консольное приложение на C#, которое реализует простого Telegram-бота.

Создайте Telegram-бота через BotFather (https://core.telegram.org/bots/features#botfather)

Создайте консольное приложение и реализуйте подключение к боту через токен. 
Используйте библиотеку Telegram.Bot (https://github.com/TelegramBots/Telegram.Bot)

Реализуйте обработчик входящих сообщений через IUpdateHandler. Создайте класс UpdateHandler, 
который реализует интерфейс IUpdateHandler из библиотеки Telegram.Bot.

При получении сообщения типа UpdateType.Message бот должен ответить "Сообщение успешно принято".

Пример кода:

var botClient = new TelegramBotClient("<token>");
var receiverOptions = new ReceiverOptions
{
    AllowedUpdates = [UpdateType.Message],
    DropPendingUpdates = true
};
var handler = new UpdateHandler();
botClient.StartReceiving(handler, receiverOptions);

var me = await botClient.GetMe();
Console.WriteLine($"{me.FirstName} запущен!");

await Task.Delay(-1); // Устанавливаем бесконечную задержку, чтобы наш бот работал постоянно
Добавьте делегаты и события: в классе UpdateHandler в начале и в конце обработки сообщений выкидывайте события
(event) OnHandleUpdateStarted и OnHandleUpdateCompleted соответственно. События должны быть типа MessageHandler.
В основном коде программы подпишитесь на эти события, а в обработчиках их срабатываний выводите соответствующие уведомления в консоль:
"Началась обработка сообщения '{message}'" и "Закончилась обработка сообщения '{message}'".

При завершении работы приложения незабудьте отписаться от событий. Для этого можно использовать try/finally

Реализуйте отмену асинхронных операции при нажатии клавиши A.
В конце работы программы вместо Task.Delay(-1) выводите текст "Нажмите клавишу A для выхода" и ожидайте нажатия любой клавиши.

Если нажата клавиша "A" - выходите из программы и отмените все асинхронные операции. В противном случае выводите информацию о Telegram-боте.
Информацию нужно взять из метода botClient.GetMe()

Реализовать отмену асинхронной операции нужно с использованием CancellationTokenSource.

Добавьте команду /cat в телеграмм бот, которая будет возвращать случайный факт о кошках. 
Факт можно взять из API https://catfact.ninja/#/Facts/getRandomFact
Пример кода:

record CatFactDto(string Fact, int length);

var cts = new CancellationTokenSource();
using var client = new HttpClient();
var catFact = await client.GetFromJsonAsync<CatFactDto>("https://catfact.ninja/fact", cts.Token);
Советы:

Избегайте утечку токена вашего Telegram-бота. При отправки ДЗ на проверку убедитесь, что в коде нет токена.
Также не делает коммиты в git-репозиторий с токеном.

Полезные ресурсы

Документация библиотеки: https://github.com/TelegramBots/Telegram.Bot
Пример реализации: https://github.com/TelegramBots/Telegram.Bot.Examples